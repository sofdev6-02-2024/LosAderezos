services:

# FRONTEND
  frontend:
    container_name: frontend
    build: 
      context: ${CONTEXT}
      dockerfile: ./infrastructure/environments/frontend/Dockerfile
    ports:
      - "5173:5173"
    depends_on:
        api-gateway:
          condition: service_started

# API GATEWAY

  api-gateway:
    container_name: api
    build:
      context: ${CONTEXT}
      dockerfile: ./infrastructure/environments/api-gateway/Dockerfile
    ports:
      - "8000:80"
    depends_on:
      product-management-service:
        condition: service_started
      user-management-service:
        condition: service_started
      user-authentication-service:
        condition: service_started

# PRODUCT MANAGEMENT

  product-management-service:
    container_name: ProductManagementService
    build: 
      context: ${CONTEXT}
      dockerfile: ./infrastructure/environments/product-management/Dockerfile
    environment:
      ASPNETCORE_HTTP_PORTS: 80
    depends_on:
      product-management-database:
        condition: service_healthy
  
  product-management-database:
    container_name: ProductManagementDB
    image: mysql:9
    environment:
      - MYSQL_ROOT_PASSWORD=${PRODUCT_MANAGEMENT_DB_PASSWORD}
      - MYSQL_DATABASE=${PRODUCT_MANAGEMENT_DB_SCHEMA}
    volumes:
      - ${CONTEXT}/infrastructure/environments/product-management/productDB/init-db:/docker-entrypoint-initdb.d
      - ${CONTEXT}/infrastructure/environments/product-management/productDB/Data/Hipermaxi:/var/lib/mysql-files/
    healthcheck:
      test: ["CMD-SHELL", "mysql -u root -p${PRODUCT_MANAGEMENT_DB_PASSWORD} --execute 'SELECT @@GLOBAL.version;'"]
      interval: 3s
      retries: 10

# USER MANAGEMENT   
  
  user-management-service:
    container_name: UserManagementService
    build:
      context: ${CONTEXT}
      dockerfile: ./infrastructure/environments/user-management/Dockerfile
    environment:
      ASPNETCORE_HTTP_PORTS: 80
    depends_on:
      user-management-database-MySQL:
        condition: service_healthy

  user-management-database-MySQL:
    container_name: UserManagementDBMySQL
    image: mysql:9
    environment:
      - MYSQL_ROOT_PASSWORD=${USER_MANAGEMENT_DB_MySQL_PASSWORD}
      - MYSQL_DATABASE=${USER_MANAGEMENT_DB_MySQL_SCHEMA}
    volumes:
      - ${CONTEXT}/infrastructure/environments/user-management/userDB/init-db:/docker-entrypoint-initdb.d 
      - ${CONTEXT}/infrastructure/environments/user-management/userDB/Data:/var/lib/mysql-files/
    healthcheck:
      test: ["CMD-SHELL", "mysql -u root -p${USER_MANAGEMENT_DB_MySQL_PASSWORD} --execute 'SELECT @@GLOBAL.version;'"]
      interval: 3s
      retries: 10

# USER AUTHENTICATION
  
  user-authentication-service:
    container_name: AuthenticationService
    build:
      context: ${CONTEXT}
      dockerfile: ./infrastructure/environments/third-authentication/Dockerfile
    depends_on:
      user-management-service:
        condition: service_started